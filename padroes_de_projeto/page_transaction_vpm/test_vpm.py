# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestVpm:
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    # def teardown_method(self, method):
    #     self.driver.quit()

    def test_vpm(self):
        self.access()
        self.english()
        self.portuguese()
        self.info()
        self.go_home()
        self.contact()
        self.go_home_2()
        self.search()
        self.go_home_3()
        self.close()

    def close(self):
        self.driver.close()

    def go_home_3(self):
        self.driver.find_element(By.CSS_SELECTOR, ".navbar-brand > img").click()
        self.driver.find_element(By.CSS_SELECTOR, ".add-blanks > h4").click()
        assert (
            self.driver.find_element(By.CSS_SELECTOR, ".add-blanks > h4").text
            == "Veja mais"
        )

    def search(self):
        self.driver.find_element(By.ID, "message_field").click()
        self.driver.find_element(By.ID, "message_field").send_keys("software")
        self.driver.find_element(By.ID, "cond_and").click()
        self.driver.find_element(By.ID, "send_message").click()
        self.driver.find_element(
            By.CSS_SELECTOR, ".add-blanks > .row:nth-child(1)"
        ).click()
        WebDriverWait(self.driver, 30).until(
            expected_conditions.text_to_be_present_in_element(
                (By.CSS_SELECTOR, ".row:nth-child(1) > .col-md-2 > p"),
                "Similaridade 21.8%",
            )
        )
        assert (
            self.driver.find_element(
                By.CSS_SELECTOR, ".row:nth-child(1) > .col-md-2 > p"
            ).text
            == "Similaridade 21.8%"
        )

    def go_home_2(self):
        self.driver.find_element(By.CSS_SELECTOR, ".navbar-brand > img").click()
        self.driver.find_element(By.CSS_SELECTOR, ".col-md-10").click()
        assert (
            self.driver.find_element(By.CSS_SELECTOR, "label:nth-child(1)").text
            == "Conteúdo do currículo"
        )

    def contact(self):
        self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(6) img").click()
        self.driver.find_element(By.CSS_SELECTOR, ".container:nth-child(3)").click()
        assert (
            self.driver.find_element(By.CSS_SELECTOR, "p:nth-child(1)").text
            == "Entre em contato. Ficaremos felizes em responder às suas perguntas."
        )

    def go_home(self):
        self.driver.find_element(By.CSS_SELECTOR, ".navbar-brand > img").click()
        self.driver.find_element(By.CSS_SELECTOR, ".col-md-10").click()
        assert (
            self.driver.find_element(By.CSS_SELECTOR, "label:nth-child(1)").text
            == "Conteúdo do currículo"
        )

    def info(self):
        self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(5) img").click()
        self.driver.find_element(By.CSS_SELECTOR, "p:nth-child(1)").click()
        assert (
            self.driver.find_element(By.CSS_SELECTOR, "p:nth-child(1)").text
            == "Este projeto nasceu da vontade de seus colaboradores de ajudar as pessoas a encontrarem emprego mais facilmente. Passamos por um período de pandemia muito difícil para todos em que várias pessoas perderam seus empregos e não conseguiram recolocação no mercado de trabalho. Para mudar este cenário, coletamos e disponibilizamos vagas de diferentes empresas automaticamente para que as pessoas possam comparar seus currículos com as posições de mercado que são mais relevantes para elas. Isso inclui você. Entendemos que desta forma, conseguiremos unir quem está precisando de colaboradores e quem precisa trabalhar. Este projeto é totalmente gratuito e conta com a colaboração da comunidade para crescer e alcançar mais pessoas. Se você gostou desta iniciativa, veja aqui como você pode contribuir e fazer o projeto se expandir."
        )

    def portuguese(self):
        self.driver.find_element(
            By.CSS_SELECTOR, ".btn:nth-child(3) > button:nth-child(1) > img"
        ).click()
        self.driver.find_element(By.CSS_SELECTOR, ".col-md-10").click()
        assert (
            self.driver.find_element(By.CSS_SELECTOR, "label:nth-child(1)").text
            == "Conteúdo do currículo"
        )

    def english(self):
        self.driver.find_element(By.CSS_SELECTOR, "button:nth-child(2) > img").click()
        self.driver.find_element(By.CSS_SELECTOR, ".col-md-10").click()
        assert (
            self.driver.find_element(By.CSS_SELECTOR, "label:nth-child(1)").text
            == "Content of curriculum"
        )

    def access(self):
        self.driver.get("https://vagaspramim.onrender.com/")
        self.driver.set_window_size(1094, 765)
        self.driver.find_element(By.CSS_SELECTOR, ".navbar-text").click()
        assert (
            self.driver.find_element(By.CSS_SELECTOR, ".navbar-text").text
            == "Vagas pra mim"
        )
